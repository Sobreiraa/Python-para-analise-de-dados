{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bb17b847",
   "metadata": {},
   "source": [
    "# Exercícios \n",
    "\n",
    "## Variáveis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5959dc96",
   "metadata": {},
   "source": [
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47535f02",
   "metadata": {},
   "source": [
    "#### 1. Crie uma variável para armazenar seu nome e exiba-a no console"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dad6af5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Digite seu nome: Matheus\n",
      "Bem vindo Matheus!\n"
     ]
    }
   ],
   "source": [
    "nome = str(input('Digite seu nome: '))\n",
    "print(f'Bem vindo {nome}!')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5e4ac6f",
   "metadata": {},
   "source": [
    "#### 2. Atribua dois números a variáveis e calcule sua soma"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "869a80cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A soma dos números 5 e 15 é: 20\n"
     ]
    }
   ],
   "source": [
    "num1 = 5\n",
    "num2 = 15\n",
    "soma = num1 + num2\n",
    "print(f'A soma dos números {num1} e {num2} é: {soma}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "637e9661",
   "metadata": {},
   "source": [
    "#### 3. Crie uma variável para armazenar a idade de uma pessoa e exiba uma mensagem dizendo \"Sua idade é X\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "69cc5c95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sua idade é de 23 anos!\n"
     ]
    }
   ],
   "source": [
    "idade = 23\n",
    "print(f'Sua idade é de {idade} anos!')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "97944e99",
   "metadata": {},
   "source": [
    "#### 4. Declare duas variáveis, uma contendo uma string e outra um número, e exiba ambos concatenados em uma frase"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "41ab060b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Me chamo Matheus e estou estudando Python em 2025.\n"
     ]
    }
   ],
   "source": [
    "string = 'Matheus'\n",
    "numero = 2025\n",
    "\n",
    "print(f'Me chamo {string} e estou estudando Python em {numero}.' )"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e294622",
   "metadata": {},
   "source": [
    "#### 5. Troque os valores de duas variáveis sem usar uma variável extra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "10c656cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Matheus Sobreira\n",
      "Dos Santos\n"
     ]
    }
   ],
   "source": [
    "# Primeiro valor\n",
    "var1 = 'Matheus'\n",
    "var2 = 'Sobreira'\n",
    "\n",
    "print(var1, var2)\n",
    "\n",
    "# Segundo valor\n",
    "var1 = 'Dos'\n",
    "var2 = 'Santos'\n",
    "\n",
    "print(var1, var2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15e26048",
   "metadata": {},
   "source": [
    "#### 6. Crie uma variável com um valor decimal e arredonde para o inteiro mais próximo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "aee3f755",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "var1 = 4.6\n",
    "print(int(var1))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c265534",
   "metadata": {},
   "source": [
    "#### 7. Declare uma variável com o valor None e depois atribua um valor a ela"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3bb6f992",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "variavel = None\n",
    "variavel = True\n",
    "print(variavel)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9964a674",
   "metadata": {},
   "outputs": [],
   "source": [
    "#### 8. Crie variáveis para armazenar os valores de um triângulo e calcule sua área"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "07e27fed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A área do triangulo é 4.725.\n"
     ]
    }
   ],
   "source": [
    "base = 1.5\n",
    "altura = 6.3\n",
    "area = base * altura / 2\n",
    "print(f'A área do triangulo é {area}.')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9852043",
   "metadata": {},
   "source": [
    "#### 9. Use uma variável para armazenar a quantidade de caracteres de uma string"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "be6ae157",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "A quantidade de caracteres da frase 'Estou estudando Python' é de 22 caracteres!\n"
     ]
    }
   ],
   "source": [
    "string = 'Estou estudando Python'\n",
    "qtd_string = len(string)\n",
    "print(f\"A quantidade de caracteres da frase '{string}' é de {qtd_string} caracteres!\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d854f059",
   "metadata": {},
   "source": [
    "#### 10. Calcule o quadrado de um número armazenado em uma variável"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3ff3c346",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "O quadrado de 5 é 25\n"
     ]
    }
   ],
   "source": [
    "numero = 5\n",
    "quadrado = numero * numero\n",
    "print(f\"O quadrado de {numero} é {quadrado}!\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
